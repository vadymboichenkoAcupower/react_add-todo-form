{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","title","completed","TodoList","todos","Array","isArray","map","username","getUserById","userId","usersFromServer","find","initTodos","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","setTodos","reset","action","method","onSubmit","event","preventDefault","trim","idList","newTodo","Math","max","prevTodos","addNewTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4958cff.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  user: {\n    email,\n    name,\n  },\n}) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed = false,\n    user,\n  },\n}) => {\n  return (\n    <article data-id={id} className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {Array.isArray(todos) && todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(userId: number) {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser;\n}\n\nconst initTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const [todos, setTodos] = useState(initTodos);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const addNewTodo = () => {\n    const idList = todos.map(\n      todo => todo.id,\n    );\n\n    const maxIdPlusOne = Math.max(...idList) + 1;\n\n    const newTodo: Todo = {\n      id: maxIdPlusOne,\n      title: title.trim(),\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setTodos((prevTodos) => ([...prevTodos, newTodo]));\n\n    reset();\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    addNewTodo();\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          Title:&nbsp;&nbsp;\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          User:&nbsp;&nbsp;\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}